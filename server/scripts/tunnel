#!/bin/bash

# Exit on any error
set -e

# Check if BOT_TOKEN is set
if [ -z "$BOT_TOKEN" ]; then
    echo "❌ BOT_TOKEN environment variable is not set"
    echo "Please run: export BOT_TOKEN=your_bot_token"
    exit 1
fi

# Check if ngrok is already running
if curl -s http://localhost:4040/api/tunnels 2>/dev/null | grep -q "public_url"; then
    echo "⚠️  Ngrok is already running!"
    NGROK_URL=$(curl -s http://localhost:4040/api/tunnels | grep -o '"public_url":"https://[^"]*' | head -1 | sed 's/"public_url":"//' 2>/dev/null || echo "")
    echo "🔗 Current tunnel: $NGROK_URL"
    echo "Use ./restart_server.sh to restart just the server"
    exit 0
fi

echo "🌐 Starting ngrok tunnel with static domain..."

# Start ngrok in background with static domain
ngrok http 3333 --domain=tight-constantly-gibbon.ngrok-free.app --log=stdout > ngrok.log &
NGROK_PID=$!

# Wait for ngrok to start and get the URL
echo "⏳ Waiting for ngrok to initialize..."
sleep 3

# Use the static domain URL
NGROK_URL="https://tight-constantly-gibbon.ngrok-free.app"

# Verify ngrok is running
for i in {1..10}; do
    if curl -s http://localhost:4040/api/tunnels | grep -q "public_url"; then
        break
    fi
    echo "🔄 Waiting for ngrok to start... ($i/10)"
    sleep 1
done

# Final check
if ! curl -s http://localhost:4040/api/tunnels | grep -q "public_url"; then
    echo "❌ Failed to start ngrok tunnel"
    kill $NGROK_PID 2>/dev/null || true
    exit 1
fi

echo "✅ Ngrok tunnel created successfully!"
echo "📋 Tunnel URL: $NGROK_URL"
echo "🔗 Ngrok dashboard: http://localhost:4040"
echo "🔗 Ngrok PID: $NGROK_PID"
echo ""
echo "Keep this terminal open to maintain the tunnel"
echo "Press Ctrl+C to stop ngrok"
wait $NGROK_PID